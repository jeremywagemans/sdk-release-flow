name: Changeset and Release Workflow

on:
  push:
    branches:
      - main

jobs:
  changesets:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Get tags
      run: git fetch --tags origin

    - name: Setup Node.js environment
      uses: actions/setup-node@v3

    - name: Install dependencies
      run: npm install 

    - name: Create Release Pull Request
      id: changesets
      uses: changesets/action@v1
      with:
        title: 'New Release'
        commit: 'Release new version'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Tags
      if: steps.changesets.outputs.hasChangesets == 'false'
      run: |
        npx changeset tag && git push origin --tags

    - name: Extract version from package.json
      run: echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
    
    - name: Get latest tag
      run: echo "LATEST_TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
    
    - name: Compare versions and create release if needed
      run: |
        if [ "v${PACKAGE_VERSION}" != "${LATEST_TAG}" ]; then
          echo "Version in package.json (${PACKAGE_VERSION}) is different from latest tag (${LATEST_TAG}). Creating a new release..."
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token
          gh release create v${PACKAGE_VERSION} -t "Release v${PACKAGE_VERSION}" -n "Release for version v${PACKAGE_VERSION}"
        else
          echo "Version in package.json matches the latest tag. No new release needed."
        fi

      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
